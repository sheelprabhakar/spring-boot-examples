apiVersion: v1
kind: Service
metadata:
  name: springboot-camel-play
  namespace: springboot-example
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30037
  selector:
    app: springboot-camel-play

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-camel-play
  namespace: springboot-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-camel-play
  template:
    metadata:
      labels:
        app: springboot-camel-play
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox:latest
          command: ['sh', '-c', 'until nc -z mysql 3306; do echo waiting for mysql; sleep 2; done;']
        - name: wait-for-redis
          image: busybox:latest
          command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done;']
        - name: wait-for-rabbitmq
          image: busybox:latest
          command: ['sh', '-c', 'until nc -z rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']
      containers:
        - name: springboot-camel-play
          image: host.docker.internal:5000/springboot-camel-play:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/exampledb
            - name: SPRING_DATASOURCE_USERNAME
              value: app_user
            - name: SPRING_DATASOURCE_PASSWORD
              value: Password$4
            - name: SPRING_RABBITMQ_HOST
              value: rabbitmq
            - name: SPRING_REDIS_HOST
              value: redis